import {
  FlowGraphExecutionBlockWithOutSignal
} from "./chunk-25OB4Y2U.js";
import {
  RichTypeNumber
} from "./chunk-NQXNHGXF.js";
import {
  RegisterClass
} from "./chunk-D3RSQZXW.js";

// ../../../node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCancelDelayBlock.js
var FlowGraphCancelDelayBlock = class extends FlowGraphExecutionBlockWithOutSignal {
  constructor(config) {
    super(config);
    this.delayIndex = this.registerDataInput("delayIndex", RichTypeNumber);
  }
  _execute(context, _callingSignal) {
    const delayIndex = this.delayIndex.getValue(context);
    if (delayIndex <= 0 || isNaN(delayIndex) || !isFinite(delayIndex)) {
      return this._reportError(context, "Invalid delay index");
    }
    const timers = context._getExecutionVariable(this, "pendingDelays", []);
    const timer = timers[delayIndex];
    if (timer) {
      timer.dispose();
    }
    this.out._activateSignal(context);
  }
  getClassName() {
    return "FlowGraphCancelDelayBlock";
  }
};
RegisterClass("FlowGraphCancelDelayBlock", FlowGraphCancelDelayBlock);

export {
  FlowGraphCancelDelayBlock
};
//# sourceMappingURL=chunk-RT2HCO6I.js.map
